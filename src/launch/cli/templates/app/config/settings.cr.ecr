# About settings.cr File
#
# With `Launch::Server.configure` block you can define the Server configuration
# settings and access credentials and/or values evaluated at runtime.
Launch::Server.configure do |settings|
  # Name: A name that identifies this application. This is not internally
  # used by the framework.
  settings.name = "Lt2"

  if Launch.env == :development || Launch.env == :test
    # Colorize Logging: specifies whether or not to use ANSI color codes
    # when logging information, display the time and/or to display the severity level.
    # Defaults to true.
    settings.logging.severity = "info"
    settings.logging.colorize = true
    settings.logging.color = "white"
    settings.logging.filter = %w(password confirm_password)
    settings.logging.skip = %w()

    # Secret Key Base: is used for specifying a key which allows sessions
    # for the application to be verified against a known secure key to
    # prevent tampering. Applications get Launch.secret_key
    # initialized to a random key present in `ENV["LAUNCH_SECRET_KEY"]` or
    # `.launch_secret_key` in this order.
    settings.secret_key_base = <%= Random::Secure.urlsafe_base64(32) %>

    # Host: is the application server host address or ip address. Useful for when
    # deploying Launch to a PAAS and likely the assigned server IP is either
    # known or unknown. Defaults to an environment variable HOST
    settings.host = "0.0.0.0" # Launch.credentials["production"]["host"]

    # Port Reuse: Launch supports clustering mode which allows to spin
    # multiple app instances per core. This setting allows to bind the different
    # instances to the same port. Default this setting to true if the number or process
    # is greater than 1.
    #
    # > Read more about Linux PORT REUSE https://lwn.net/Articles/542629/
    settings.port_reuse = true

    # Process Count: This will enable Launch to be used in cluster mode,
    # spinning an instance for each number of process specified here.
    # Rule of thumb, always leave at least 1 core available for system processes/resources.
    #
    # settings.process_count = ENV["PROCESS_COUNT"].to_i if ENV["PROCESS_COUNT"]?
    #
    #
    # PORT: This is the port that you're application will run on. Examples would be (80, 443, 3000, 8080)
    settings.port = 3001

    # Redis URL: Redis is an in memory key value storage. Launch utilizes redis as
    # a storing option for session information.
    settings.redis_url = ""

    # Database URL: This is the database connection string or data file url.
    # The connection string contains the information to establish a connection to the
    # database or the data file. Defaults to the database provider you chose at
    # at app generation.
    settings.database_url = ""

    # SSL Key File: The private key is a text file used initially to generate a
    # Certificate Signing Request (CSR), and later to secure and verify connections
    # using the certificate created per that request. The private key is used to create
    # a digital signature as you might imagine from the name, the private key should be
    # ``closely guarded.
    settings.ssl_key_file = nil

    # SSL Cert File: This represents the signed certificate file. SSL Certificates are
    # small data files that digitally bind a cryptographic key to an organization's
    # details. When installed on a web server, it activates the padlock and the https
    # protocol and allows secure connections from a web server to a browser.

    settings.ssl_cert_file = nil

    # Session: A Hash that specifies the session storage mechanism, expiration and key to be used
    # for the application. The `key` specifies the name of the cookie to be used defaults to
    # "launch.session". The store can be `encrypted_cookie`, `signed_cookie` or `redis`. Expires
    # when set to 0 means this is indefinitely and is expressed in seconds.
    settings.session = {"key" => "launch.session", "store" => "signed_cookie", "expires" => 0}
  end

  if Launch.env == :production
    # Name: A name that identifies this application. This is not internally
    # used by the framework.
    settings.name = "Lt2 web application."

    # Colorize Logging: specifies whether or not to use ANSI color codes
    # when logging information, display the time and/or to display the severity level.
    # Defaults to true.
    settings.logging.severity = "info"
    settings.logging.colorize = true
    settings.logging.color = "white"
    settings.logging.filter = %w(password confirm_password)
    settings.logging.skip = %w()

    # Secret Key Base: is used for specifying a key which allows sessions
    # for the application to be verified against a known secure key to
    # prevent tampering. Applications get Launch.secret_key
    # initialized to a random key present in `ENV["LAUNCH_SECRET_KEY"]` or
    # `.launch_secret_key` in this order.
    settings.secret_key_base = Launch.credentials["production"]["secret_key_base"]

    # Host: is the application server host address or ip address. Useful for when
    # deploying Launch to a PAAS and likely the assigned server IP is either
    # known or unknown. Defaults to an environment variable HOST
    settings.host = Launch.credentials["production"]["host"]

    # Port Reuse: Launch supports clustering mode which allows to spin
    # multiple app instances per core. This setting allows to bind the different
    # instances to the same port. Default this setting to true if the number or process
    # is greater than 1.
    #
    # > Read more about Linux PORT REUSE https://lwn.net/Articles/542629/
    settings.port_reuse = true

    # Process Count: This will enable Launch to be used in cluster mode,
    # spinning an instance for each number of process specified here.
    # Rule of thumb, always leave at least 1 core available for system processes/resources.
    #
    settings.process_count = 1
    #
    #
    # PORT: This is the port that you're application will run on. Examples would be (80, 443, 3000, 8080)
    settings.port = 8080

    # Redis URL: Redis is an in memory key value storage. Launch utilizes redis as
    # a storing option for session information.
    settings.redis_url = Launch.credentials["production"]["redis_url"]

    # Database URL: This is the database connection string or data file url.
    # The connection string contains the information to establish a connection to the
    # database or the data file. Defaults to the database provider you chose at
    # at app generation.
    settings.database_url = Launch.credentials["production"]["database_url"]

    # SSL Key File: The private key is a text file used initially to generate a
    # Certificate Signing Request (CSR), and later to secure and verify connections
    # using the certificate created per that request. The private key is used to create
    # a digital signature as you might imagine from the name, the private key should be
    # ``closely guarded.
    settings.ssl_key_file = Launch.credentials["production"]["ssl_key_file"]

    # SSL Cert File: This represents the signed certificate file. SSL Certificates are
    # small data files that digitally bind a cryptographic key to an organization's
    # details. When installed on a web server, it activates the padlock and the https
    # protocol and allows secure connections from a web server to a browser.

    settings.ssl_cert_file = Launch.credentials["production"]["ssl_cert_file"]

    # Session: A Hash that specifies the session storage mechanism, expiration and key to be used
    # for the application. The `key` specifies the name of the cookie to be used defaults to
    # "launch.session". The store can be `encrypted_cookie`, `signed_cookie` or `redis`. Expires
    # when set to 0 means this is indefinitely and is expressed in seconds.
    settings.session = {"key" => "launch.session", "store" => "signed_cookie", "expires" => 0}
  end
end
